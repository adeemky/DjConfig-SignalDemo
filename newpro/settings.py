"""
Django settings for newpro project.

Generated by 'django-admin startproject' using Django 5.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import environ
from configurations import (Configuration, values,)

env = environ.Env()

environ.Env.read_env(env_file=str(Path(__file__).resolve().parent / ".env"))


class Dev(Configuration):
    BASE_DIR = Path(__file__).resolve().parent.parent

    SECRET_KEY = env("SECRET_KEY", default="django-insecure-default-key")
    DEBUG = values.BooleanValue(env.bool("DEBUG", default=True))
    ALLOWED_HOSTS = env.list("ALLOWED_HOSTS", default=[])

    INSTALLED_APPS = [
        "django.contrib.admin",
        "django.contrib.auth",
        "django.contrib.contenttypes",
        "django.contrib.sessions",
        "django.contrib.messages",
        "django.contrib.staticfiles",
        'myapp',
    ]

    MIDDLEWARE = [
        "django.middleware.security.SecurityMiddleware",
        "django.contrib.sessions.middleware.SessionMiddleware",
        "django.middleware.common.CommonMiddleware",
        "django.middleware.csrf.CsrfViewMiddleware",
        "django.contrib.auth.middleware.AuthenticationMiddleware",
        "django.contrib.messages.middleware.MessageMiddleware",
        "django.middleware.clickjacking.XFrameOptionsMiddleware",
    ]

    ROOT_URLCONF = "newpro.urls"

    TEMPLATES = [
        {
            "BACKEND": "django.template.backends.django.DjangoTemplates",
            "DIRS": [],
            "APP_DIRS": True,
            "OPTIONS": {
                "context_processors": [
                    "django.template.context_processors.debug",
                    "django.template.context_processors.request",
                    "django.contrib.auth.context_processors.auth",
                    "django.contrib.messages.context_processors.messages",
                ],
            },
        },
    ]

    WSGI_APPLICATION = "newpro.wsgi.application"

    DATABASES = {
        "default": env.db("DATABASE_URL", default=f"sqlite:///{BASE_DIR}/db.sqlite3")
    }

    AUTH_PASSWORD_VALIDATORS = [
        {
            "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
        },
        {
            "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
        },
        {
            "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
        },
        {
            "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
        },
    ]

    LANGUAGE_CODE = "en-us"
    TIME_ZONE = "UTC"
    USE_I18N = True
    USE_TZ = True

    STATIC_URL = "static/"
    DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

    LOGGING = {
        "version": 1,
        "disable_existing_loggers": False,
        "handlers": {
            "file": {
                "class": "logging.FileHandler",
                "filename": env("DJANGO_LOG_FILE"),
                "level": env("DJANGO_LOG_LEVEL"),
                "formatter": "verbose",
            },
            "console": {
                "class": "logging.StreamHandler",
                "level": env("DJANGO_LOG_LEVEL"),
                "formatter": "simple",
            },
        },
        "loggers": {
            "myapp": {
                "level": env("DJANGO_LOG_LEVEL"),
                "handlers": ["file", "console"],
            },
        },
        "formatters": {
            "simple": {"format": "{asctime} {levelname} {message}", "style": "{"},
            "verbose": {
                "format": "{asctime}: {levelname} - {name} {module}.py (line {lineno:d}). {message}",
                "style": "{",
            },
        },
    }


class Prod(Dev):
    DEBUG = values.BooleanValue(False)
    ALLOWED_HOSTS = values.ListValue(["myproductiondomain.com", "localhost", "127.0.0.1"])

    LOGGING = {
        "version": 1,
        "disable_existing_loggers": False,
        "loggers": {
            "myapp": {
                "level": "NOTSET",
                "handlers": [],
                "propagate": False,
            },
        }
    }
